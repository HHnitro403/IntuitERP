<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="IntuitERP.Viwes.CadastroProduto"
             Title="CadastroProduto">
    <!-- Main Grid for the page layout -->
    <Grid RowSpacing="0" Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Header -->
            <RowDefinition Height="*"/>
            <!-- Form Content -->
            <RowDefinition Height="Auto"/>
            <!-- Footer with Buttons -->
        </Grid.RowDefinitions>

        <!-- Top header -->
        <Grid Grid.Row="0" BackgroundColor="{AppThemeBinding Light=#FFE4C4, Dark=#1A1C20}" Padding="10,15">
            <Label Text="Novo Produto" TextColor="White" FontSize="22" FontAttributes="Bold" HorizontalOptions="Center"/>
        </Grid>

        <!-- Scrollable Form Content -->
        <ScrollView Grid.Row="1">
            <VerticalStackLayout Spacing="15" Padding="20">

                <!-- Descrição do Produto -->
                <Label Text="Descrição do Produto:" FontSize="16"/>
                <Entry x:Name="DescricaoProdutoEntry" Placeholder="Digite a descrição do produto" FontSize="16"/>

                <!-- Categoria -->
                <Label Text="Categoria:" FontSize="16"/>
                <Entry x:Name="CategoriaEntry" Placeholder="Ex: Eletrônicos, Vestuário, Alimentos" FontSize="16"/>
                <!-- Consider using a Picker if categories are predefined -->

                <!-- Preço Unitário -->
                <Label Text="Preço Unitário (R$):" FontSize="16"/>
                <Entry x:Name="PrecoUnitarioEntry" Placeholder="0.00" Keyboard="Numeric" FontSize="16"/>

                <!-- Fornecedor Principal (FornecedorP_ID) -->
                <Label Text="Fornecedor Principal:" FontSize="16"/>
                <Picker x:Name="FornecedorPicker" Title="Selecione o Fornecedor Principal" FontSize="16">
                    <!-- Items would be populated from your 'fornecedor' table in C# -->
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type x:String}">
                            <x:String>Fornecedor A (Cód: 1)</x:String>
                            <x:String>Fornecedor B (Cód: 2)</x:String>
                            <x:String>Fornecedor C (Cód: 3)</x:String>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <!-- Estoque Mínimo -->
                <Label Text="Estoque Mínimo:" FontSize="16"/>
                <Entry x:Name="EstoqueMinimoEntry" Placeholder="0" Keyboard="Numeric" FontSize="16"/>

                <!-- Tipo do Produto -->
                <Label Text="Tipo do Produto:" FontSize="16"/>
                <Entry x:Name="TipoProdutoEntry" Placeholder="Ex: Físico, Digital, Serviço" FontSize="16"/>
                <!-- Consider using a Picker if tipos are predefined -->

                <!-- Data de Cadastro -->
                <!-- Often set automatically by the system. Can be hidden or read-only. -->
                <Label Text="Data de Cadastro:" FontSize="16"/>
                <DatePicker x:Name="DataCadastroPicker" IsEnabled="False" FontSize="16" Format="dd/MM/yyyy"/>

                <!-- Ativo -->
                <HorizontalStackLayout Spacing="10" VerticalOptions="Center">
                    <Label Text="Ativo:" FontSize="16" VerticalOptions="Center"/>
                    <Switch x:Name="AtivoSwitch" IsToggled="True" VerticalOptions="Center"/>
                </HorizontalStackLayout>

                <!-- Fields typically not set directly on product creation: -->
                <!-- SaldoEst: Usually managed by stock movement transactions. -->
                <!-- EstoqueID, VarianteID: Might be for more complex inventory systems or variants, often handled differently. -->

            </VerticalStackLayout>
        </ScrollView>

        <!-- Footer with Action Buttons -->
        <Grid Grid.Row="2" Padding="20" ColumnSpacing="10" BackgroundColor="{AppThemeBinding Light=#F0F0F0, Dark=#2C2C2C}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="SalvarProdutoButton" Grid.Column="0" Text="Salvar Produto" BackgroundColor="ForestGreen" TextColor="White" FontSize="16" CornerRadius="8"/>
            <Button x:Name="CancelarButton" Grid.Column="1" Text="Cancelar" BackgroundColor="DarkRed" TextColor="White" FontSize="16" CornerRadius="8"/>
            <!-- Add Clicked event handlers in C# for functionality -->
            <!-- e.g., Clicked="SalvarProdutoButton_Clicked" -->
        </Grid>

    </Grid>
</ContentPage>